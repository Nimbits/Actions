name: 'Shopware 6 Plugin Test'

on:
  workflow_call:
    inputs:
      phpstan-level:
        description: 'PHPStan analysis level'
        required: false
        default: '5'
        type: 'string'
      php-version:
        description: 'PHP version for PHPStan'
        required: false
        default: "8.2"
        type: string
      composer-version:
        description: 'PHP version for PHPStan'
        required: false
        default: "2.8.9"
        type: string
    secrets:
      CURR_VAULT_PATH:
        required: true
      CURR_VAULT_TOKEN:
        required: true
      DEPENDENCY_TOKEN:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1

      - name: Determine Base Branch
        id: basebranch
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "branch=$(git ls-remote --heads origin master | grep -q master && echo master || echo main)" >> $GITHUB_ENV
          else
            echo "branch=$(git ls-remote --heads origin master | grep -q master && echo master || (git ls-remote --heads origin main | grep -q main && echo main))" >> $GITHUB_ENV
          fi
  
      - name: Check composer version
        if: github.event_name != 'release'
        run: |
          git fetch origin ${{ env.branch }}:${{ env.branch }}
          BASE_VERSION=$(jq -r '.version' composer.json -c)
          git checkout ${{ env.branch }}
          CURRENT_VERSION=$(jq -r '.version' composer.json -c)
          git checkout -
          if [ "$GITHUB_REF_NAME" != "${{ env.branch }}" ] && [ "$BASE_VERSION" == "$CURRENT_VERSION" ]; then
            echo "Please change the composer version"
            exit 1
          fi

      
      - name: Check for README changes
        if: github.event_name != 'release'
        run: |
          git fetch origin ${{ env.branch }}
          if ! git diff --name-only HEAD origin/${{ env.branch }} | grep -q "README"; then
            echo "Please add the version to the readme"
            exit 1
          fi


      - name: Configure GitHub token #needed for vcs dependencies
        run: composer config --global --auth github-oauth.github.com ${{ secrets.DEPENDENCY_TOKEN }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          github-token: ${{ secrets.DEPENDENCY_TOKEN }}
          php-version: ${{ inputs.php-version }}
          tools: composer:${{ inputs.composer-version }}

      - name: Install dependencies
        run: |
          composer install

      - name: PHPStan
        uses: php-actions/phpstan@v3
        with:
          version: composer
          path: src/
          level: ${{ inputs.phpstan-level }}
          php_version: ${{ inputs.php-version }}

      - name: Fetch secrets from Vault for testing
        id: fetch_secrets
        if: failure()
        uses: hashicorp/vault-action@v2.7.4
        with:
          url: ${{ vars.VAULT_SERVER }}
          method: token
          token: ${{ secrets.CURR_VAULT_TOKEN }}
          secrets: |
            deployment/data/store/sw6 ms_teams_webhook_uri | MS_TEAMS_WEBHOOK_URI

      - name: Notify teams on failure
        if: failure()
        uses: jdcargile/ms-teams-notification@v1.4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ms-teams-webhook-uri: ${{ env.MS_TEAMS_WEBHOOK_URI }}
          notification-summary: 'Tests failed!'
          notification-color: 'F85149'  # Red 
          timezone: Europe/Berlin
