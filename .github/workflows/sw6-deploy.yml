name: Deploy to Shopware 6

on:
  workflow_call:
    inputs:
      remote_host:
        required: true
        type: string
      remote_user:
        required: true
        type: string
      target_path:
        required: true
        type: string
    secrets:
      REMOTE_PWD:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.check.outputs.should_deploy }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # fetch the entire history to make sure we can check tags

    - name: Check tag
      id: check
      run: |
        tag=$(git tag --contains ${{ github.sha }})
        should_deploy="false"
        if [[ -z "$tag" ]]; then
          echo "No new tag associated with this commit. Skipping deployment."
        elif [[ "$tag" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          should_deploy="true"
        else
          echo "Tag does not match the format '[0-9]+.[0-9]+.[0-9]+'! Consider removing the tag."
          exit 1
        fi
        echo "should_deploy=$should_deploy" >> $GITHUB_ENV
        echo "should_deploy=$should_deploy" >> $GITHUB_PATH
        echo "should_deploy=$should_deploy" > should_deploy.txt
        echo "Deployment status: $should_deploy"   # Add this for debugging

    - name: Set output from file
      if: env.should_deploy == 'true'
      id: set_output
      run: echo "should_deploy=$(cat should_deploy.txt)" >> $GITHUB_ENV

    - name: Get latest tag
      if: env.should_deploy == 'true'
      id: latest_tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install jq
      if: env.should_deploy == 'true'
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Update version in composer.json
      if: env.should_deploy == 'true'
      run: jq '.version = "${{ steps.latest_tag.outputs.tag }}"' composer.json > composer.tmp.json && mv composer.tmp.json composer.json

    - name: Remove unnecessary files
      if: env.should_deploy == 'true'
      run: |
        rm -rf README.md .git* .eslint* .env* .prettier*

    - name: Deployment to temporary directory
      if: env.should_deploy == 'true'
      uses: appleboy/scp-action@master
      with:
          host: ${{ inputs.remote_host }}
          port: 22
          username: ${{ inputs.remote_user }}
          password: ${{ secrets.REMOTE_PWD }}
          target: ${{ inputs.target_path }}/ci_temp/${{ github.event.repository.name }}
          source: ./*
          strip_components: 0

    - name: Replace old directory with new one
      if: env.should_deploy == 'true'
      uses: appleboy/ssh-action@master
      with:
        host: ${{ inputs.remote_host }}
        port: 22
        username: ${{ inputs.remote_user }}
        password: ${{ secrets.REMOTE_PWD }}
        script: |
          rm -rf ${{ inputs.target_path }}/custom/plugins/${{ github.event.repository.name }}
          mv ${{ inputs.target_path }}/ci_temp/${{ github.event.repository.name }} ${{ inputs.target_path }}/custom/plugins/${{ github.event.repository.name }}
