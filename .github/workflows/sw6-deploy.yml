name: Deploy to Shopware 6

on:
  workflow_call:
    inputs:
      is_prod:
        required: false
        type: boolean
        default: false
      check_tag:
        required: false
        type: boolean
        default: true
    secrets:
      CURR_VAULT_PATH:
        required: true
      CURR_VAULT_TOKEN:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get latest tag
      id: latest_tag
      uses: actions-ecosystem/action-get-latest-tag@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Validate tag format
      if: check_tag
      run: |
        if ! [[ "${{ steps.latest_tag.outputs.tag }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          echo "Tag does not match the format '[0-9]+.[0-9]+.[0-9]+'! Consider removing the tag."
          exit 1
        fi

    - name: Update version in composer.json
      run: jq '.version = "${{ steps.latest_tag.outputs.tag }}"' composer.json > composer.tmp.json && mv composer.tmp.json composer.json

    - name: Remove unnecessary files
      run: |
        rm -rf README.md .git* .eslint* .env* .prettier*

    - name: Fetch secrets from Vault for deployment
      id: fetch_secrets
      uses: hashicorp/vault-action@v2.7.4
      with:
        url: ${{ vars.VAULT_SERVER }}
        method: token
        token: ${{ secrets.CURR_VAULT_TOKEN }}
        secrets: |
          ${{ secrets.CURR_VAULT_PATH }} remote_host | REMOTE_HOST ;
          ${{ secrets.CURR_VAULT_PATH }} remote_user | REMOTE_USER ;
          ${{ secrets.CURR_VAULT_PATH }} remote_pwd | REMOTE_PWD ;
          ${{ secrets.CURR_VAULT_PATH }} ${{ inputs.is_prod && 'prod_path' || 'dev_path' }} | REMOTE_PATH ;
          ${{ secrets.CURR_VAULT_PATH }} ms_teams_webhook_uri | MS_TEAMS_WEBHOOK_URI

    - name: Deployment to temporary directory
      uses: appleboy/scp-action@v0.1.4
      with:
          host: ${{ env.REMOTE_HOST }}
          port: 22
          username: ${{ env.REMOTE_USER }}
          password: ${{ env.REMOTE_PWD }}
          target: ${{ env.REMOTE_PATH }}/ci_temp/${{ github.event.repository.name }}
          source: ./*
          strip_components: 0

    - name: Replace old directory with new one
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.REMOTE_HOST }}
        port: 22
        username: ${{ env.REMOTE_USER }}
        password: ${{ env.REMOTE_PWD }}
        script: |
          rm -rf ${{ env.REMOTE_PATH }}/custom/plugins/${{ github.event.repository.name }}
          mv ${{ env.REMOTE_PATH }}/ci_temp/${{ github.event.repository.name }} ${{ env.REMOTE_PATH }}/custom/plugins/${{ github.event.repository.name }}
    
    - name: Clear Cache & Theme compile & Assets install
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ env.REMOTE_HOST }}
        port: 22
        username: ${{ env.REMOTE_USER }}
        password: ${{ env.REMOTE_PWD }}
        script: |
          cd ${{ env.REMOTE_PATH }}
          bin/console cache:clear
          bin/console theme:compile
          bin/console assets:install

    - name: Notify teams on success
      if: success()
      uses: jdcargile/ms-teams-notification@v1.3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        ms-teams-webhook-uri: ${{ env.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: 'Deployment successful!'
        notification-color: '3FBA50' # Green
        timezone: Europe/Berlin


    - name: Notify teams on failure
      if: failure()
      uses: jdcargile/ms-teams-notification@v1.3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        ms-teams-webhook-uri: ${{ env.MS_TEAMS_WEBHOOK_URI }}
        notification-summary: 'Deployment failed!'
        notification-color: 'F85149'  # Red 
        timezone: Europe/Berlin

